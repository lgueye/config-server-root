version: '3.8'
services:
  config-server-backend:
    image: redis:6.2-alpine
    container_name: config-server-backend
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "spring-cloud-bus:1:1"

  # Configured through environment variables
  config-server:
    depends_on:
      - config-server-backend
      - broker
    container_name: config-server
    image: "${REGISTRY:-docker.io}/${IMAGE_NAME:-hyness/spring-cloud-config-server}:${TAG:-latest}"
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: redis,cloud-bus-kafka
      SPRING_DATA_REDIS_HOST: config-server-backend
      SPRING_DATA_REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      SPRING_KAFKA_BOOTSTRAP-SERVERS: "broker:9092"
